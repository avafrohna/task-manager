version: '3.3'

services:
  frontend:
    depends_on:
      - backend
    image: myapp_frontend:latest
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    deploy:
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure
    networks:
      - app-network

  backend:
    depends_on:
      - db
    image: myapp_backend:latest
    ports:
      - "4000:4000"
    environment:
      - DATABASE_HOST=db
      - DATABASE_USER=root
      - DATABASE_PASSWORD=5253
      - DATABASE_NAME=task_manager
      - FRONTEND_URL=${FRONTEND_URL} 
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - app-network

  db:
    image: mysql:8
    volumes:
      - database:/var/lib/mysql
      - ./data-tables.sql:/docker-entrypoint-initdb.d/data-tables.sql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=5253
      - MYSQL_DATABASE=task_manager
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - app-network

volumes:
  database: {}

networks:
  app-network:
    driver: overlay
  