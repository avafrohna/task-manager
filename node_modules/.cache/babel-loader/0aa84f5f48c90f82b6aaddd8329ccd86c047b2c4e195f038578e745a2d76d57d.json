{"ast":null,"code":"var _jsxFileName = \"/Users/avafrohna/Code/cloudcomputing/task-manager/src/components/task-form.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskFormPage() {\n  _s();\n  const {\n    taskID\n  } = useParams();\n  const editMode = Boolean(taskID);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    status: 'Not started'\n  });\n  useEffect(() => {\n    if (editMode) {\n      const fetchTaskData = async () => {\n        try {\n          const token = localStorage.getItem('token');\n          const response = await axios.get(`http://localhost:4000/api/tasks/${taskID}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          const task = response.data;\n          setFormData({\n            title: task[0].title,\n            description: task[0].description || '',\n            status: task[0].status\n          });\n        } catch (err) {\n          setError(`Error fetching task: ${err.message}`);\n        }\n      };\n      fetchTaskData();\n    }\n  }, [editMode, taskID]);\n  const editForm = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  const submit = async e => {\n    e.preventDefault();\n    try {\n      if (editMode) {\n        await axios.put(`http://localhost:4000/api/tasks/${taskID}`, formData);\n      } else {\n        const token = localStorage.getItem('token');\n        await axios.post('http://localhost:4000/api/tasks', formData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      navigate('/list-tasks');\n    } catch (err) {\n      setError(`Error saving tasks: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-custom mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", editMode ? 'Edit Task' : 'Add Task', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Fill in the form below to \", editMode ? 'edit this' : 'create a new', \" task. \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: formData.title,\n            onChange: editForm,\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted small\",\n            children: \"The name of your task.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            value: formData.description,\n            onChange: editForm,\n            className: \"form-control\",\n            rows: \"2\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted small\",\n            children: \"Provide a brief description of your task.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"status\",\n            value: formData.status,\n            onChange: editForm,\n            className: \"form-select\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Not started\",\n              children: \"Not started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"In progress\",\n              children: \"In progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Finished\",\n              children: \"Finished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted small\",\n            children: \"Select status of task.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success mb-4\",\n          children: \"Save Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskFormPage, \"foypX7oxj4rZIVqSsq/lx127qN0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskFormPage;\nexport default TaskFormPage;\nvar _c;\n$RefreshReg$(_c, \"TaskFormPage\");","map":{"version":3,"names":["useNavigate","useParams","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskFormPage","_s","taskID","editMode","Boolean","error","setError","navigate","formData","setFormData","title","description","status","fetchTaskData","token","localStorage","getItem","response","get","headers","Authorization","task","data","err","message","editForm","e","name","value","type","checked","target","submit","preventDefault","put","post","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","rows","_c","$RefreshReg$"],"sources":["/Users/avafrohna/Code/cloudcomputing/task-manager/src/components/task-form.jsx"],"sourcesContent":["import { useNavigate, useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction TaskFormPage() {\n  const { taskID } = useParams();\n  const editMode = Boolean(taskID); \n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    status: 'Not started',\n  });\n\n  useEffect(() => {\n    if (editMode) {\n      const fetchTaskData = async () => {\n        try {\n          const token = localStorage.getItem('token');\n          const response = await axios.get(\n            `http://localhost:4000/api/tasks/${taskID}`,\n            {\n              headers: { Authorization: `Bearer ${token}` }\n            }\n          );\n          const task = response.data;\n          setFormData({\n            title: task[0].title,\n            description: task[0].description || '',\n            status: task[0].status,\n          });\n        }\n        catch (err) {\n          setError(`Error fetching task: ${err.message}`);\n        }\n      };\n      fetchTaskData();\n    }\n  }, [editMode, taskID]);\n\n  const editForm = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value,\n    });\n  };\n\n  const submit = async (e) => {\n    e.preventDefault(); \n  \n    try {\n      if (editMode) {\n        await axios.put(`http://localhost:4000/api/tasks/${taskID}`, formData);\n      } \n      else {\n        const token = localStorage.getItem('token');\n\n        await axios.post(\n          'http://localhost:4000/api/tasks',\n          formData,\n          {\n            headers: { Authorization: `Bearer ${token}` }\n          }\n        );\n      }\n      navigate('/list-tasks');\n    } \n    catch (err) {\n      setError(`Error saving tasks: ${err.message}`);\n    }\n  };\n\n  return (\n    <div id=\"root\">\n\n      <div className=\"container-custom mt-3\">\n        <h1> {editMode ? 'Edit Task' : 'Add Task'} </h1>\n        <p> Fill in the form below to {editMode ? 'edit this' : 'create a new'} task. </p>\n\n        {error && <p className=\"text-danger\">{error}</p>}\n        \n        <form onSubmit={submit}>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Title</label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={formData.title}\n              onChange={editForm}\n              className=\"form-control\"\n              required\n            />\n            <p className=\"text-muted small\">The name of your task.</p>\n          </div>\n\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Description</label>\n            <textarea\n              name=\"description\"\n              value={formData.description}\n              onChange={editForm}\n              className=\"form-control\"\n              rows=\"2\"\n              required\n            />\n            <p className=\"text-muted small\">Provide a brief description of your task.</p>\n          </div>\n\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Status</label>\n            <select\n              name=\"status\"\n              value={formData.status}\n              onChange={editForm}\n              className=\"form-select\"\n              required\n            >\n              <option value=\"Not started\">Not started</option>\n              <option value=\"In progress\">In progress</option>\n              <option value=\"Finished\">Finished</option>\n            </select>\n            <p className=\"text-muted small\">Select status of task.</p>\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-success mb-4\">Save Project</button>\n        </form>\n      </div>\n\n    </div>\n  );\n}\n\nexport default TaskFormPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}