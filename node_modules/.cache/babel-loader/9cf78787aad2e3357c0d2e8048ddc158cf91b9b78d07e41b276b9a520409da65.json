{"ast":null,"code":"var _jsxFileName = \"/Users/avafrohna/Code/cloudcomputing/scalable-map/src/components/project-list.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getProjects, deleteProject } from '../api';\nimport Footer from './footer';\nimport Header from './header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectListPage() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(null);\n\n  // fetches project data when rendered\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const projectsData = await getProjects();\n        setProjects(projectsData);\n      } catch (err) {\n        setError(`Error fetching projects: ${err.message}`);\n      }\n    };\n    fetchProjects();\n  }, []); //only needs to be rendered once, when the page initially loads\n\n  /**\n   * deletes a project and updates the list of projects after deletion\n   * @param {number} id - ID of project wanted to delete\n   */\n  const deleteProjects = async id => {\n    try {\n      await deleteProject(id);\n      setProjects(projects.filter(project => project.id !== id));\n    } catch (err) {\n      setError(`Error deleting project: ${err.message}`);\n    }\n  };\n\n  /**\n   * trims long text to a maximum length and adds ellipsis if needed\n   * @param {string} text - the text to be trimmed\n   * @param {number} maxLength - the maximum length of the text\n   * @returns {string} - trimmed text with ellipsis if needed\n   */\n  const cutOffText = (text, maxLength) => {\n    if (text.length > maxLength) {\n      return text.substring(0, maxLength) + '...';\n    }\n    return text;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-custom mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add-project\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Add Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this), projects.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fw-bold fs-4\",\n                children: [cutOffText(project.title, 30), project.is_published == true ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success ms-3\",\n                  children: \"Published\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 55\n                }, this) : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: cutOffText(project.description, 110)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-end\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/list-locations/${project.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary me-2\",\n                  children: \"View Locations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/edit-project/${project.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary me-2\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger me-2\",\n                onClick: () => deleteProjects(project.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)]\n          }, project.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No projects available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectListPage, \"HWd4WJ49bFOqIBoIA6ASGlXnWoA=\");\n_c = ProjectListPage;\nexport default ProjectListPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectListPage\");","map":{"version":3,"names":["Link","useEffect","useState","getProjects","deleteProject","Footer","Header","jsxDEV","_jsxDEV","ProjectListPage","_s","projects","setProjects","error","setError","fetchProjects","projectsData","err","message","deleteProjects","id","filter","project","cutOffText","text","maxLength","length","substring","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","map","title","is_published","description","onClick","_c","$RefreshReg$"],"sources":["/Users/avafrohna/Code/cloudcomputing/scalable-map/src/components/project-list.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getProjects,deleteProject } from '../api'; \nimport Footer from './footer';\nimport Header from './header';\n\nfunction ProjectListPage() {\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(null);\n\n  // fetches project data when rendered\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const projectsData = await getProjects();\n        setProjects(projectsData);\n      } \n      catch (err) {\n        setError(`Error fetching projects: ${err.message}`);\n      }\n    };\n  \n    fetchProjects();\n  }, []); //only needs to be rendered once, when the page initially loads\n\n  /**\n   * deletes a project and updates the list of projects after deletion\n   * @param {number} id - ID of project wanted to delete\n   */\n  const deleteProjects = async (id) => {\n    try {\n      await deleteProject(id);\n      setProjects(projects.filter((project) => project.id !== id));\n    } \n    catch (err) {\n      setError(`Error deleting project: ${err.message}`);\n    }\n  };\n\n  /**\n   * trims long text to a maximum length and adds ellipsis if needed\n   * @param {string} text - the text to be trimmed\n   * @param {number} maxLength - the maximum length of the text\n   * @returns {string} - trimmed text with ellipsis if needed\n   */\n  const cutOffText = (text, maxLength) => {\n    if (text.length > maxLength) {\n      return text.substring(0, maxLength) + '...';\n    }\n    return text;\n  };\n\n  return (\n    <div id=\"root\">\n      <Header />\n  \n      <div className=\"container-custom mt-3\">\n        <h1 className=''>\n          Projects\n        </h1>\n\n        {/* add new location button */}\n        <div className=\"mt-4\">\n          <Link to=\"/add-project\">\n            <button className=\"btn btn-primary\">Add Project</button>\n          </Link>\n        </div>\n\n        {/* display error messages */}\n        {error && <p className=\"text-danger\">{error}</p>}\n      \n        {/* rendering based on the number of projects */}\n        {projects.length > 0 ? (\n          <table className=\"table table-striped mt-4\">\n            <tbody>\n              {projects.map((project) => (\n                <tr key={project.id}>\n                  <td>\n                    <div className='fw-bold fs-4'>\n                      {cutOffText(project.title, 30)}\n                      {project.is_published == true ? <button className=\"btn btn-success ms-3\">Published</button> : ''}\n                    </div>\n                    <div>{cutOffText(project.description, 110)}</div>\n                  </td>\n                  <td className=\"text-end\">\n                    {/* view location associated with project */}\n                    <Link to={`/list-locations/${project.id}`}>\n                      <button className=\"btn btn-primary me-2\">View Locations</button>\n                    </Link>\n                    {/* edit project */}\n                    <Link to={`/edit-project/${project.id}`}>\n                      <button className=\"btn btn-secondary me-2\">Edit</button>\n                    </Link>\n                    {/* delete project */}\n                    <button\n                      className=\"btn btn-danger me-2\"\n                      onClick={() => deleteProjects(project.id)}>Delete</button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <p>No projects available.</p>\n        )}\n      </div>\n  \n      <Footer />\n    </div>\n  );  \n}\n\nexport default ProjectListPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}